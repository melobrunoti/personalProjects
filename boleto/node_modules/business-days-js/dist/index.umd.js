!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("date-holidays"),require("dayjs"),require("dayjs/plugin/utc"),require("dayjs/plugin/timezone"),require("dayjs/plugin/customParseFormat")):"function"==typeof define&&define.amd?define(["date-holidays","dayjs","dayjs/plugin/utc","dayjs/plugin/timezone","dayjs/plugin/customParseFormat"],t):(e=e||self).getPkg=t(e.dateHolidays,e.dayjs,e.utc,e.timezone,e.customParseFormat)}(this,function(e,t,a,i,o){e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,a=a&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a,i=i&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i,o=o&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o,t.extend(a),t.extend(i),t.extend(o);var d=function(e){try{e=t.tz(e,"YYYY-MM-DD","America/New_York")}catch(e){throw e}return e};return function(t){var a=void 0===t?{}:t,i=a.state,o=void 0===i?"US":i,n=a.excludeHolidays,r=void 0===n?[]:n,u=a.addHolidays,s=void 0===u?[]:u,l=new e;!function(e,t){var a=Object.keys(t.getStates("US"));if(!(a=[].concat(a,["US","USA"])).includes(e.toUpperCase()))throw e+" is not a US state."}(o,l);var y=o.toUpperCase();return"US"===y||"USA"===y?l.init("US"):l.init("US",y),r.length>0&&function(e,t){t.forEach(function(t){var a=function(e,t,a){var i=e.getHolidays("2020").find(function(e){return e.name.toLowerCase()===t.toLowerCase()});return i?i.rule:""}(e,t);a&&e.setHoliday(a,{name:t,type:"optional"})})}(l,r),s.length>0&&function(e,t){t.forEach(function(t){var a=t.rule,i=t.name;if(!a||!i)throw"Custom holidays must include a rule and a name";e.setHoliday(a,{name:i,type:"public"})})}(l,s),{hd:l,USState:y,getHolidays:function(e){return this.hd.getHolidays(e).filter(function(e){return"public"===e.type})},check:function(e){var t=(e=d(e)).day();if(0===t||6===t)return!1;var a=this.hd.isHoliday(e.toDate());return!a||"public"!==a.type},addDays:function(e,t,a){var i=(void 0===a?{}:a).excludeInitialDate,o=void 0===i||i,n=0;for(e=d(e),o&&(e=e.add(1,"day"));n<t;)this.check(e)&&n++,n<t&&(e=e.add(1,"day"));return e},countDays:function(e,t,a){var i=(void 0===a?{}:a).excludeInitialDate,o=void 0===i||i;if(e=d(e),t=d(t),e.isAfter(t))throw e+" is after "+t+". Provide a start date that is earlier than end date in order to calculate days between";var n=0,r=0,u=[],s=0,l=0,y=0,c=0,f=e;for(o&&(f=e.add(1,"day"));!f.isSame(t.add(1,"day"),"day");){n++;var p=this.hd.isHoliday(f.toDate()),h=f.day();p&&"public"===p.type&&(r++,u.push(p)),0===h|6===h&&s++,0===h|6===h||l++,0===h|6===h&&p&&"public"===p.type&&y++,0===h|6===h||p&&"public"===p.type||c++,f=f.add(1,"day")}return{totalDays:n,holidays:r,holidayList:u,weekdays:l,weekendDays:s,holidaysOnWeekends:y,businessDays:c,nonBusinessDays:n-c}}}}});
//# sourceMappingURL=index.umd.js.map
